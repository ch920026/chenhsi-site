---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";

import ContactCTA from "../../components/ContactCTA.astro";
import WorkTitle from "../../components/WorkTitle.astro";
import Icon from "../../components/Icon.astro";
import Pill from "../../components/Pill.astro";
import '../../styles/codeGallery.css';

interface Props {
  entry: CollectionEntry<"code">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("code");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();



---
<script>
  window.onload = function() {
var target = document.getElementById('target');
        var targetPosition = target.getBoundingClientRect().top + window.pageYOffset;
console.log(targetPosition);
        window.scrollTo({
            top: targetPosition,
            behavior: 'smooth' // This makes the scroll smooth
        });}
</script>
<BaseLayout title={entry.data.title} description={entry.data.description}>

  <div class="stack gap-8" >
    <div class="stack gap-15" >
      <header>
        <div class="wrapper stack gap-2">
          <a class="back-link" href="/coding/"><Icon icon="arrow-left" /> Work</a>
          <div class:list={["hero gap-4"]}>
            <div class="flex-container">
            <div class=" gap-2 item" >
              <h1 class="title" >{entry.data.title}</h1>
            </div>
            <div class="item tool" style="height:1rm;">
              <div  style="  display: flex; align-items: center; " >
               <h5 >Tools:</h5>
              </div>
              <div class="tags">
                   {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
              </div>
            </div>
            </div>


          </div>
          
          </WorkTitle>
        </div>
      </header>
      <main class="wrapper">
        <div class="stack gap-10 content" id="target">
          <div class="content">
            <Content />
          </div>
        </div>
      </main>
    </div>

  </div>
</BaseLayout>

<style>
  header {
    padding-bottom: 0.5rem;
    /* border-bottom: 1px solid var(--gray-800); */
  }

  .back-link {
    display: none;
  }
  a {
    font-size: var(  --text-md);
  position: relative;
  text-decoration: none;
}
.flex-container {
  width:100%;
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items:flex-start ;
}
.item{
display:flex;
margin:10px 0px;

}
a:hover::after {
  content: "";
  position: absolute;
  left: 0%;
  right: 0%;
  bottom: 0;
  border: 1px solid;
}
  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;

  
  }

  .tags {
    display: flex;
    gap: 0.5rem;
  }
.image_container{



    width: 100%;
    height: 40em;

    img {
        object-fit: cover;
        width: 100%;
        height: 100%;
    }


}
  .description {
    font-size: var(--text-lg);
    max-width: 60ch;
  }
  table {
    font-size: var(--text-md);
    border-collapse: collapse;
    font-size: :15px;
  }

  tr + tr > td {
  }
  .content {
    max-width: 105ch;
    margin-inline: auto;
  }

  .content > :global(* + *) {
    margin-top: 0rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
  }

  .content :global(img) {

    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);

  }
  .imgR{
    border-radius: 1.5rem;
    border: 1px solid var(--gray-800);

  }

  .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--accent-dark);
    color: var(--gray-0);
  }

  .back-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  @media (min-width: 50em) {
    .back-link {
      display: block;
      align-self: flex-start;
    }

    .details {
      flex-direction: row;
      gap: 2.5rem;

    }

    .content :global(blockquote) {
      font-size: var(--text-2xl);
    }
  }

  @media (max-width: 900px) {
    .wrapper{
      width:95%;
      margin: 0 auto;

    }

   h1{

    font-size: var(--text-2xl);   
    margin:5px;
   }


   .tool{

    font-size: var(--text-xl);   
    margin:0 10px 0 10px;
    }
  }
</style>
